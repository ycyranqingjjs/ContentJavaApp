apply plugin: 'com.android.application'
android {
    compileSdkVersion Integer.parseInt(COMPLIE_SDK)


    productFlavors {
        // 定义开发模式和发行模式
        dev {
            // 开发模式设置 minSDKVersion = 21 从而允许Android Gradle插件预
            // 先将每个模块打包成dex并生成一个可以在Android5.0上测试的APK文件，
            // 这样不需要在Dex合并上耗费过多的时间
//            minSdkVersion 21
            minSdkVersion Integer.parseInt(MIN_SDK)
        }
        prod {
            // 应用实际需要兼容的最低SDK版本
            minSdkVersion Integer.parseInt(MIN_SDK)
        }

        compileOptions {
            targetCompatibility JavaVersion.VERSION_1_8
            sourceCompatibility JavaVersion.VERSION_1_8
        }

        defaultConfig {
            applicationId "com.ycy.contentjavaapp"
            minSdkVersion Integer.parseInt(MIN_SDK)
            targetSdkVersion Integer.parseInt(TARGET_SDK)
            versionCode Integer.parseInt(APP_VERSION_CODE)
            versionName APP_VERSION_NAME
            flavorDimensions "versionCode"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

            //放到BuiderDebug里面 个推 小米推送  球球  等
            buildConfigField "int", "Build", APP_BUILD_VERSION
            buildConfigField "String", "U_MENG_KEY", "\"" + U_MENG_KEY + "\""
            buildConfigField "String", "TENCENT_ID", "\"" + TENCENT_ID + "\""
            buildConfigField "String", "TENCENT_KEY", "\"" + TENCENT_KEY + "\""
            buildConfigField "String", "WECHAT_KEY", "\"" + WECHAT_KEY + "\""
            buildConfigField "String", "QIUQIU_KEY", "\"" + QIUQIU_KEY + "\""
            buildConfigField "String", "AGORA_ID", "\"" + AGORA_ID + "\""
            buildConfigField "String", "BUGLY_ID", "\"" + BUGLY_ID + "\""
            buildConfigField "String", "MI_APP_ID", "\"" + MI_APP_ID + "\""
            buildConfigField "String", "MI_APP_KEY", "\"" + MI_APP_KEY + "\""
            buildConfigField "int", "PROTO_VERSION", PROTO_VERSION
            manifestPlaceholders = [QIUQIU_ID_WITH_NAME : "qiuqiudazuozhan" + QIUQIU_KEY,
                                    TENCENT_ID_WITH_NAME: "tencent" + TENCENT_ID,
                                    GETUI_APP_ID        : GETUI_APP_ID,
                                    GETUI_APP_KEY       : GETUI_APP_KEY,
                                    GETUI_APP_SECRET    : GETUI_APP_SECRET
            ]

            externalNativeBuild {
                cmake {
                    cppFlags "-frtti -fexceptions"
                }
            }
            ndk {
                // 设置支持的SO库架构
                abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            }
            //拆分包开关
            multiDexEnabled true
        }
        buildTypes {

            debug {
                buildConfigField "boolean", "LOG_DEBUG", "true"
                buildConfigField "boolean", "USE_CANARY", "true"
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }

            release {
                buildConfigField "boolean", "LOG_DEBUG", "false"
                buildConfigField "boolean", "USE_CANARY", "false"
                minifyEnabled true
                shrinkResources true
                zipAlignEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }

        }

        externalNativeBuild {
            cmake {
                path "CMakeLists.txt"
            }
        }

        packagingOptions {

            exclude 'META-INF/rxjava.properties'
//     exclude 'META-INF/替换为有冲突的依赖'

        }

    }


}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    //弹簧动画

    //    compile 'com.android.support:support-dynamic-animation:27.0.2'
    api 'com.android.support:design:27.0.2'

    //cardview
    api 'com.android.support:cardview-v7:27.0.2'

    //PhotoView
    api 'com.github.chrisbanes:PhotoView:2.1.3'

    //---------------------------------

    //bibili多主题框架
    api 'com.bilibili:magicasakura:0.1.1@aar'

    //参考

    //lottie动画
    api 'com.airbnb.android:lottie:2.5.0-beta1'

    //floatingactionbutton 浮动按钮

    //        compile 'com.getbase:floatingactionbutton:1.10.1'  //参考

    //  ijkplayer

    //        # required, enough for most devices.

    //                compile 'tv.danmaku.ijk.media:ijkplayer-java:0.8.4'

    //        compile 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.4'

    //

    //        # Other ABIs: optional

    //        compile 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.4'

    //        compile 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.4'

    //        compile 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.4'

    //        compile 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.4'

    //

    //        # ExoPlayer as IMediaPlayer: optional, experimental

    //        compile 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.4'

    //    //  欢迎页

    //

    //            compile 'com.github.apl-devs:appintro:v4.2.2'  //参考

    //---------------------------------

    //------------------------------

    //jsoup网页解析

    //        compile 'org.jsoup:jsoup:1.8.3'

    // router路由

    //        compile "com.alibaba:arouter-api:1.2.0"

    //        annotationProcessor "com.alibaba:arouter-compiler:1.1.1"

    //个推

    //        api 'com.getui:sdk:2.11.1.0'


    //---------------------------------------

//    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    implementation rootProject.ext.dependencies["progressmanager"]
    implementation rootProject.ext.dependencies["retrofit-url-manager"]
    implementation rootProject.ext.dependencies["lifecyclemodel"]
    //view
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
    }
    implementation rootProject.ext.dependencies["paginate"]

    implementation project(':common')
    implementation project(':framework')
}